/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ch.hsr.univote.unigen.gui;

import ch.hsr.univote.unigen.helper.ConfigHelper;
import java.util.Properties;

/**
 *
 * @author Gian
 */
public class InitialConfiguration extends javax.swing.JPanel {

    ConfigHelper config = new ConfigHelper();
    /**
     * Creates new form ts
     */
    public InitialConfiguration() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLblElectionId = new javax.swing.JLabel();
        jLblElectionDescription = new javax.swing.JLabel();
        jLblVoterNumbers = new javax.swing.JLabel();
        jSPVoters = new javax.swing.JSpinner();
        jLblMixerNumbers = new javax.swing.JLabel();
        jSPMixers = new javax.swing.JSpinner();
        jLblTallierNumbers = new javax.swing.JLabel();
        jSPTalliers = new javax.swing.JSpinner();
        jLblMaxCandidates = new javax.swing.JLabel();
        jSPMaxCandidates = new javax.swing.JSpinner();
        jLblMaxCumulation = new javax.swing.JLabel();
        jSPMaxCumulation = new javax.swing.JSpinner();
        jTxtElectionID = new javax.swing.JTextField();
        jtxtElectionText = new javax.swing.JTextField();
        jButtonSave = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Bundle"); // NOI18N
        jLblElectionId.setText(bundle.getString("electionid")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        add(jLblElectionId, gridBagConstraints);

        jLblElectionDescription.setText(bundle.getString("electiontext")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(jLblElectionDescription, gridBagConstraints);
        jLblElectionDescription.getAccessibleContext().setAccessibleName("<electiondescription>");

        jLblVoterNumbers.setText(bundle.getString("numbervoters")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(jLblVoterNumbers, gridBagConstraints);

        jSPVoters.setModel(new javax.swing.SpinnerNumberModel(25, 1, 10000000, 1));
        jSPVoters.setValue(config.getVotersNumber());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jSPVoters, gridBagConstraints);

        jLblMixerNumbers.setText(bundle.getString("numbermixers")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(jLblMixerNumbers, gridBagConstraints);

        jSPMixers.setModel(new javax.swing.SpinnerNumberModel(5, 1, 100, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jSPMixers, gridBagConstraints);

        jLblTallierNumbers.setText(bundle.getString("numbertalliers")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(jLblTallierNumbers, gridBagConstraints);

        jSPTalliers.setModel(new javax.swing.SpinnerNumberModel(5, 1, 100, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jSPTalliers, gridBagConstraints);

        jLblMaxCandidates.setText(bundle.getString("maxcandidates")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(jLblMaxCandidates, gridBagConstraints);

        jSPMaxCandidates.setModel(new javax.swing.SpinnerNumberModel(5, 1, 100, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jSPMaxCandidates, gridBagConstraints);

        jLblMaxCumulation.setText(bundle.getString("maxcumulation")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(jLblMaxCumulation, gridBagConstraints);

        jSPMaxCumulation.setModel(new javax.swing.SpinnerNumberModel(5, 1, 100, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        add(jSPMaxCumulation, gridBagConstraints);

        jTxtElectionID.setText(config.getElectionId());
        jTxtElectionID.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jTxtElectionID, gridBagConstraints);

        jtxtElectionText.setText(config.getElectionTitle());
        jtxtElectionText.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jtxtElectionText, gridBagConstraints);

        jButtonSave.setText(bundle.getString("save")); // NOI18N
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(jButtonSave, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        Properties properties = new Properties();

        properties.setProperty("electionId", jTxtElectionID.getText());
        properties.setProperty("electionTitle", jtxtElectionText.getText());
        properties.setProperty("voters", jSPVoters.getValue().toString());
        properties.setProperty("mixers", jSPMixers.getValue().toString());
        String mixers = "";
        for (int i = 1; i <= Integer.parseInt(jSPMixers.getValue().toString()); i++) {
            mixers += "mixer" + i;
            if (i < Integer.parseInt(jSPMixers.getValue().toString())) {
                mixers += ",";
            }
        }
        properties.setProperty("mixerIds", mixers);
        properties.setProperty("talliers", jSPTalliers.getValue().toString());      
        String talliers = "";
        for (int i = 1; i <= Integer.parseInt(jSPTalliers.getValue().toString()); i++) {
            talliers += "tallier" + i;
            if (i < Integer.parseInt(jSPTalliers.getValue().toString())) {
                talliers += ",";
            }
        }
        properties.setProperty("tallierIds", talliers);
        properties.setProperty("maxCandidates", jSPMaxCandidates.getValue().toString());
        properties.setProperty("maxCumulation", jSPMaxCumulation.getValue().toString());
        properties.setProperty("certificateAuthorityId", "certificateauthority");
        properties.setProperty("electionManagerId", "electionmanager");
        properties.setProperty("electionAdministratorId", "electionadministrator");
        properties.setProperty("politicalListsFile", "candidates/Kandidierendenlisten.xlsx");
        properties.setProperty("partyListSystem", "nein");
        properties.setProperty("electionResultsPath", "xml/ElectionResults.xml");
        properties.setProperty("valueDelimiter", ",");
        properties.setProperty("votingPhaseBegin", "01.01.2013 08:00");
        properties.setProperty("votingPhaseEnd", "01.01.2013 12:00");
        
        config.saveProperties("SystemConfigFile", properties);
    }//GEN-LAST:event_jButtonSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSave;
    private javax.swing.JLabel jLblElectionDescription;
    private javax.swing.JLabel jLblElectionId;
    private javax.swing.JLabel jLblMaxCandidates;
    private javax.swing.JLabel jLblMaxCumulation;
    private javax.swing.JLabel jLblMixerNumbers;
    private javax.swing.JLabel jLblTallierNumbers;
    private javax.swing.JLabel jLblVoterNumbers;
    private javax.swing.JSpinner jSPMaxCandidates;
    private javax.swing.JSpinner jSPMaxCumulation;
    private javax.swing.JSpinner jSPMixers;
    private javax.swing.JSpinner jSPTalliers;
    private javax.swing.JSpinner jSPVoters;
    private javax.swing.JTextField jTxtElectionID;
    private javax.swing.JTextField jtxtElectionText;
    // End of variables declaration//GEN-END:variables
}
