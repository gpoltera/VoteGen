/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ch.hsr.univote.unigen.gui;

import ch.hsr.univote.unigen.db.DB4O;
import ch.hsr.univote.unigen.helper.ConfigHelper;
import java.io.IOException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Gian
 */
public class CryptoConfiguration extends javax.swing.JPanel {

    /**
     * Creates new form CryptoConfiguration
     */
    public CryptoConfiguration() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSEncryptionKeyLength = new javax.swing.JSlider();
        jCBEncryptionAlgorithm = new javax.swing.JComboBox();
        jLblEncryptionKeyLength = new javax.swing.JLabel();
        jLblSignatureAlgorithm = new javax.swing.JLabel();
        jLblSignatureKeyLength = new javax.swing.JLabel();
        jSSignatureKeyLength = new javax.swing.JSlider();
        jSeparator1 = new javax.swing.JSeparator();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jCBHashAlgorithm = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        label1 = new java.awt.Label();
        jLblSignatureAlgorithm1 = new javax.swing.JLabel();
        jCBSignatureAlgorithm = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        label2 = new java.awt.Label();

        setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Bundle"); // NOI18N
        jLabel1.setText(bundle.getString("encryption")); // NOI18N
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jLabel1, gridBagConstraints);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText(bundle.getString("algorithm")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jLabel3, gridBagConstraints);

        jLabel2.setText(bundle.getString("keylength")); // NOI18N
        jLabel2.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jLabel2, gridBagConstraints);

        jSEncryptionKeyLength.setMajorTickSpacing(1024);
        jSEncryptionKeyLength.setMaximum(4096);
        jSEncryptionKeyLength.setMinimum(1024);
        jSEncryptionKeyLength.setMinorTickSpacing(1024);
        jSEncryptionKeyLength.setPaintLabels(true);
        jSEncryptionKeyLength.setPaintTicks(true);
        jSEncryptionKeyLength.setSnapToTicks(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jSEncryptionKeyLength, gridBagConstraints);

        jCBEncryptionAlgorithm.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ElGamal" }));
        jCBEncryptionAlgorithm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBEncryptionAlgorithmActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jCBEncryptionAlgorithm, gridBagConstraints);

        jLblEncryptionKeyLength.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLblEncryptionKeyLength.setText(bundle.getString("signature")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jLblEncryptionKeyLength, gridBagConstraints);

        jLblSignatureAlgorithm.setText(bundle.getString("algorithm")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jLblSignatureAlgorithm, gridBagConstraints);

        jLblSignatureKeyLength.setText(bundle.getString("keylength")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jLblSignatureKeyLength, gridBagConstraints);

        jSSignatureKeyLength.setMajorTickSpacing(1024);
        jSSignatureKeyLength.setMaximum(4096);
        jSSignatureKeyLength.setMinimum(1024);
        jSSignatureKeyLength.setMinorTickSpacing(1024);
        jSSignatureKeyLength.setPaintLabels(true);
        jSSignatureKeyLength.setPaintTicks(true);
        jSSignatureKeyLength.setSnapToTicks(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jSSignatureKeyLength, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jSeparator1, gridBagConstraints);
        add(filler1, new java.awt.GridBagConstraints());

        jCBHashAlgorithm.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SHA-256" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jCBHashAlgorithm, gridBagConstraints);

        jLabel4.setText("bit");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jLabel4, gridBagConstraints);

        jLabel5.setText("bit");
        jLabel5.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jLabel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(jSeparator2, gridBagConstraints);

        label1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        label1.setText(bundle.getString("hash")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(label1, gridBagConstraints);

        jLblSignatureAlgorithm1.setText(bundle.getString("algorithm")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jLblSignatureAlgorithm1, gridBagConstraints);

        jCBSignatureAlgorithm.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SHA256withRSA" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jCBSignatureAlgorithm, gridBagConstraints);

        jButton2.setText(bundle.getString("save")); // NOI18N
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton2.setFocusTraversalPolicyProvider(true);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(jButton2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jSeparator3, gridBagConstraints);

        label2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        label2.setText(bundle.getString("save")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(label2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jCBEncryptionAlgorithmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBEncryptionAlgorithmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBEncryptionAlgorithmActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Properties properties = new Properties();
        
        properties.setProperty("encryptionAlgorithm", jCBEncryptionAlgorithm.getSelectedItem().toString());
        properties.setProperty("encryptionKeyLength", String.valueOf(jSEncryptionKeyLength.getValue()));
        properties.setProperty("signatureAlgorithm", jCBSignatureAlgorithm.getSelectedItem().toString());
        properties.setProperty("signatureKeyLength", String.valueOf(jSSignatureKeyLength.getValue()));
        properties.setProperty("hashAlgorithm", jCBHashAlgorithm.getSelectedItem().toString());
        
        ConfigHelper.saveProperties("CryptoConfigFile", properties);
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jCBEncryptionAlgorithm;
    private javax.swing.JComboBox jCBHashAlgorithm;
    private javax.swing.JComboBox jCBSignatureAlgorithm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLblEncryptionKeyLength;
    private javax.swing.JLabel jLblSignatureAlgorithm;
    private javax.swing.JLabel jLblSignatureAlgorithm1;
    private javax.swing.JLabel jLblSignatureKeyLength;
    private javax.swing.JSlider jSEncryptionKeyLength;
    private javax.swing.JSlider jSSignatureKeyLength;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private java.awt.Label label1;
    private java.awt.Label label2;
    // End of variables declaration//GEN-END:variables
}
